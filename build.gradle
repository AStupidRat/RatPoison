import java.nio.file.Files

buildscript {
	ext.kotlin_version = '1.3.40'
	ext.jnaVersion = '5.2.0'
	ext.gdxVersion = '1.9.10'
	ext.visuiVersion = "1.4.4"

	repositories {
		jcenter()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
	}
}

apply plugin: "idea"
apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

group "rat.poison"
version "1.7.1.1"

mainClassName = "rat.poison.RatPoison"

repositories {
	jcenter()
	maven { url 'https://jitpack.io' }
}

dependencies {
	compile group: "org.jire.arrowhead", name: "arrowhead", version: "1.3.3"

	compile "com.badlogicgames.gdx:gdx:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"

	compile group: 'net.java.dev.jna', name: 'jna', version: jnaVersion
	compile group: 'net.java.dev.jna', name: 'jna-platform', version: jnaVersion

	compile "com.kotcrab.vis:vis-ui:$visuiVersion"

	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-script-runtime', version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-script-util', version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-compiler-embeddable', version: kotlin_version

	compile group: 'commons-io', name: 'commons-io', version: 2.6
	compile 'com.github.ata4:ioutils:b1f26588b5'
	implementation 'com.github.ata4:bspsrc:v1.3.24'
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

shadowJar {
	baseName = 'RatPoison'
	classifier = null
}

task RatPoison {
	doLast {
		def name = "RatPoison $version"

		def dir = file("build/$name/")
		if (dir.exists()) dir.deleteDir()
		dir.mkdirs()

		def jarName = "${name}.jar"
		//noinspection GroovyAssignabilityCheck
		def jar = file(new File(dir, jarName))
		def allJar = file("build/libs/RatPoison-${version}.jar")
		Files.copy(allJar.toPath(), jar.toPath())

		//noinspection GroovyAssignabilityCheck
		def bat = file(new File(dir, "Start ${name}.bat"))
		Files.write(bat.toPath(), """@echo off
		set path="%JAVA_HOME%";%path%
		cd /d "%~dp0"
		title $name
		java -Xmx512m -Xms32m -XX:+UseSerialGC -jar "$jarName" 
		pause""".getBytes())

		def dirSettings = file(new File(dir, "settings"))
		dirSettings.mkdirs()
		def settings = file("settings")
		settings.listFiles().each {
			Files.copy(it.toPath(), (new File(dirSettings, it.getName())).toPath())
		}

		def dirHitsounds = file(new File(dir, "settings\\hitsounds"))
		dirHitsounds.mkdirs()
		def hitsounds = file("settings\\hitsounds")
		hitsounds.listFiles().each {
			Files.copy(it.toPath(), (new File(dirHitsounds, it.getName())).toPath())
		}

		def dirCfgs = file(new File(dir, "settings\\CFGS"))
		dirCfgs.mkdirs()
		def cfgs = file("settings\\CFGS")
		cfgs.listFiles().each {
			Files.copy(it.toPath(), (new File(dirCfgs, it.getName())).toPath())
		}

		def dirHelper = file(new File(dir, "settings\\NadeHelper"))
		dirHelper.mkdirs()
		def helper = file("settings\\NadeHelper")
		helper.listFiles().each {
			Files.copy(it.toPath(), (new File(dirHelper, it.getName())).toPath())
		}

		def dirSkinInfo = file(new File(dir, "settings\\SkinInfo"))
		dirSkinInfo.mkdirs()
		def skinfo = file("settings\\SkinInfo")
		skinfo.listFiles().each {
			Files.copy(it.toPath(), (new File(dirSkinInfo, it.getName())).toPath())
		}

		def dirSkin = file(new File(dir, "skin"))
		dirSkin.mkdirs()
		def skins = file("skin")
		skins.listFiles().each {
			Files.copy(it.toPath(), (new File(dirSkin, it.getName())).toPath())
		}
	}
}

RatPoison.dependsOn shadowJar
RatPoison.mustRunAfter shadowJar

sourceSets {
	main.java.srcDirs += 'src/main/java'
	main.java.srcDirs += 'src/main/kotlin'
	main.java.srcDirs += 'settings'
}
